class Rain extends MovieClip{	private var classObj:Object;	private var parentMC:MovieClip;		private var rain:MovieClip;	private var startTime:Number;	private var endTime:Number;	private var drops:Number; 		//the number of drops currently onscreen	private var totalDrops:Number;	private var maxDrops:Number;	private var strength:Number;	private var curStrength:Number;	private var duration:Number;	private var dropAlpha:Number;	private var dropSpeed:Number;	private var dropLength:Number;	private var abating:Boolean;	private var madeRainbow:Boolean;		//these functions can be called from outside the class	public function Rain (s:Number,		//strength 1-10						  d:Number,		//duration in seconds						  mc:MovieClip,	//the target clip						  fullStrength:Boolean						  ){ 		trace ("new Rain");		startTime = getTimer();		rain = mc.createEmptyMovieClip("rain",6000);		strength = s;		duration = d;		abating = false;		//maximum number of raindrops is 100 * strength		if (fullStrength!=true){			curStrength = 1;		} else {			curStrength = s;		}		drops = 0;		totalDrops = 0;		setDrops(curStrength);		parentMC = mc;		trace ("parentMC.w = "+parentMC.w);		//set up an onEnterFrame function		classObj = this;		rain.classObj = this;		rain.onEnterFrame = function(){			//trace ("rain on EF");			this.classObj.checkTime();			this.classObj.checkDrops();		}	}		private function abate () {		trace ("rain abates");		abating = true;		endTime = duration*2;	}		private function rainbow () {		madeRainbow=true;		parentMC.raining=false;		trace ("make a rainbow");		parentMC.RB = new Rainbow(parentMC,strength,duration/4);	}		public function destroy (){		delete rain.onEnterFrame;		rain.removeMovieClip();		delete classObj;	}			//these functions are only called within the class		private function checkTime(){		var sec = (getTimer()-startTime)/1000;		if (!abating and (sec>=duration)){			abate();		}		if (abating and sec>=endTime){			rainbow();			destroy();		}		if (!abating){			if ((sec/duration) >= (curStrength/strength)){				curStrength++;				setDrops(curStrength);				trace ("rain gets harder");			}		} else {			if (((endTime-sec)/duration) <= (curStrength/strength)){				curStrength--;				setDrops(curStrength);				trace ("rain gets weaker");			}		}	}		//functions that govern all the drops	private function setDrops(s:Number){		maxDrops = 100*s;		dropAlpha = 20+5*s;		dropLength = 10*s;		dropSpeed=5+s;	}		private function checkDrops(){		if (drops<maxDrops){			for (var i=0;i<curStrength;i++){				makeRaindrop();			}		}	}	//functions for an individual drop	private function makeRaindrop(){		drops++;		totalDrops++;		var d:MovieClip = rain.createEmptyMovieClip("drop"+totalDrops,totalDrops);		d.dlength = random(dropLength);		d.alpha = dropAlpha*(d.dlength/dropLength)		d.lineStyle(.1,0x000000,d.alpha);		d.moveTo(0,0);		d.lineTo(0,-d.dlength);		d._y=-random(10);		d._x=random(parentMC.w);		d._visible = false;		d.classObj = classObj;		//trace ("made "+d+" at x="+d._x+" and y="+d._y);		d.onEnterFrame = function(){			this.classObj.fall(this);		}	}		private function fall(d:MovieClip){  //drop		if (d.pattered==true){			killDrop(d);			return;		}		//trace ("ground Y for drop "+d+" = "+parentMC.ground["line"+d._x].Y);		var groundY = parentMC.G.getGroundY(d._x);		if (groundY==undefined){			d._visible = false;			killDrop(d);		} else {			d._visible = true;		}		var fallY = dropSpeed - (dropSpeed-d.dlength);		if (groundY!=undefined and d._y<=groundY and groundY<=(d._y+fallY)){			//trace (d+" hits ground");			patter(d,d._y,groundY);			return;		}		if (d._y+fallY>parentMC.h){			d.pattered=true;		}		d._y+=fallY;	}		private function patter(d:MovieClip,dY:Number,gY:Number){		d.pattered = true;		d.clear();		d._y=gY;		d.lineStyle(.1,0,dropAlpha);		d.moveTo(0,0);		d.lineTo(0,dY-gY);		if (d.alpha<40){			return;		}		d.moveTo(0,0);		d.lineTo(-1,-1);		d.moveTo(0,0);		d.lineTo(1,-1);	}		private function killDrop(d:MovieClip){		//trace ("kill "+d);		drops--;		d.clear();		delete d.onEnterFrame;		d.removeMoveClip();	}}