class Dog extends MovieClip{		private var self:MovieClip;	private var trotPace:Number;	private var walkPace:Number;	private var state:String;	private var tick:Number;	private var tickStop:Number;	private var paceTick:Number;	private var paceTickStop:Number;	private var loop:String;	private var pee:MovieClip;	private var peeStop:Number;	private var peePoint:MovieClip;	private var sniffStop:Number;	public var flip:Number;		function Dog(){		trace ("new Dog");		self = this;		trace (self);		_xscale=7;		_yscale=7;		_x=_parent.w+5;		_y=_parent.G.getGroundY(_parent.w);		flip = -1;		_xscale *= flip;		trotPace = .6;		walkPace = .35;		_alpha=80;		// _x=-_width/2;		shouldn't need this because the symbol is set up correctly		// _y=-_height/2-10;		state = "move";		loop = "trot";		gotoAndPlay(loop);		peeStop = 10000;		sniffStop = 10000;		paceTick = 0;		paceTickStop = 60+random(60);		pee = self.createEmptyMovieClip("pee",0);		onEnterFrame = function(){			this.behave();		}	}			private function behave():Void{		switch (state){			case "move":				_x += flip*self[loop+"Pace"];				_y = _parent.G.getGroundY(Math.floor(_x));				var startX = _x-_width;				var endX = _x+_width;				var startY = _parent.G.getGroundY(Math.floor(startX));				var endY = _parent.G.getGroundY(Math.floor(endX));				_rotation = 180*Math.atan((endY-startY)/(endX-startX))/Math.PI;				if (_x-7>_parent.w or _x<-_width/2){					destroy();				}				if (peeStop!=10000 and Math.abs(_x-peeStop)<=1){					peeStop=10000;					tick=0;					tickStop=24+random(60);					state="pee";					gotoAndStop("pee");				}				//trace ("line "+Math.round(_x+_width/2)+" hasTree = "+_parent.G.hasTree(Math.round(_x+_width/2)));				if (Math.abs(_x-sniffStop)>_width*5 and _parent.G.hasTree(Math.round(_x+flip*_width/2)) and Math.random()<.2){					state="sniff";					loop=state;					tick=0;					tickStop=60+random(48);					gotoAndPlay("sniff");					sniffStop=_x+flip*_width*5;				}				if (peeStop==10000 and random(100)==1 and Math.abs(_x-_parent.w/2)<_parent.w/6){					state="still";					loop=state;					break;				}				paceTick++;				if (!(_parent.raining and loop=="trot") and peeStop==10000 and paceTick>=paceTickStop){					if (loop=="trot"){						loop="walk";						paceTick=0;						paceTickStop = 48+random(48);					} else {						loop="trot";						paceTick=0;						paceTickStop = 60+random(60);					}					gotoAndPlay(loop);				}				break;			case "still":				if (random(100)==1){					if (Math.random()<.5){						flip *= -1;						_xscale *= -1;					}					state="move";					loop="trot";					gotoAndPlay(loop);					paceTick=0;					paceTickStop = 60+random(60);				}				break;			case "sniff":				tick++;				if (tick==tickStop){					if (Math.random()<.5){						peeStop=_x+flip*4*_width/3;						loop="walk";					} else {						tick=0;						loop="trot";					}					state="move";					gotoAndPlay(loop);				}				break;			case "pee":				tick++;				if (tick==tickStop){					pee.clear();					state="move";					loop="trot";					gotoAndPlay(loop);					paceTick=0;					break;				}				//draw a curve from peePoint to spot on ground;				endX=-25-15;				if (tick<15){					endX=-25-tick;				}				if (tickStop-tick<=15){					endX=-25-(tickStop-tick);				}				with (pee){					clear();					lineStyle(.5,0x636363,50)					moveTo(-15,-21);					curveTo(endX,-21,endX,0);				}				break;		}	}	public function destroy(){		trace ("destroy dog");		delete onEnterFrame;		this.removeMovieClip();	}}